---
format: html
---
```{r setup}
#| include: false

source("r scripts/create-tables.R")
source("r scripts/create-navbar.R")


```

{{< include md/welcome.md >}}

------------------------------------------------------------------------

# Rights

**Rights** guarantee *people* **the ability to pursue life, liberty, and happiness**. While the rights we defend will often have legal footing within the United States and internationally, the guiding principle will always be life, liberty, and happiness.


```{r echo=FALSE, results='asis'}
#| label: rights-cards
library(knitr)

# Loop over results and output raw HTML using asis_output
cat('<div class="card-grid">')

for (i in seq_len(nrow(rights))) {
  cat(asis_output(sprintf('
<div class="right-card">
  <h3>%s</h3>
  <p>%s</p>
  <a href="%s">Rationale and sources ↗</a>
</div>
', rights$Right[i], rights$DefinitionHTML[i], rights$Link[i])))
}
cat('</div>')
```

------------------------------------------------------------------------

# Issues

The issues we cover will be cases where individuals, organizations, or governments systemically infringe upon the *rights* of an individual or group of individuals.

```{r echo=FALSE, results='asis'}
#| label: issues-flip-cards
library(knitr)

# Loop over results and output raw HTML using asis_output
cat('<div class="flip-card-grid">')

for (i in seq_len(nrow(issues))) {
  cat(asis_output(sprintf('
<div class="flip-card">
<div class="flip-card-inner">
<div class="flip-card-front">
  <h3>%s</h3>
  <span class="flip-icon" title="Flip to read more">↻</span>
</div>
<div class="flip-card-back">
  <p>%s</p>
  <a href="%s">Read the Issue ↗</a>
</div>
</div>
</div>
', issues$Title[i], issues$SummaryHTML[i], issues$Link[i])))
}
cat('</div>')
```

------------------------------------------------------------------------

# Solutions

The solutions we cover will be public policy or laws that can be passed by congress to remedy an issue.


```{r echo=FALSE, results='asis'}
#| label: solutions-flip-cards
library(knitr)

# Loop over results and output raw HTML using asis_output
cat('<div class="flip-card-grid">')

for (i in seq_len(nrow(solutions))) {
  cat(asis_output(sprintf('
<div class="flip-card">
<div class="flip-card-inner">
<div class="flip-card-front">
  <h3>%s</h3>
  <span class="flip-icon" title="Flip to read more">↻</span>
</div>
<div class="flip-card-back">
  <p>%s</p>
  <a href="%s">Read about this solution ↗</a>
</div>
</div>
</div>
', solutions$Title[i], solutions$SummaryHTML[i], solutions$Link[i])))
}
cat('</div>')
```

------------------------------------------------------------------------

```{=html}
<script>
document.addEventListener("DOMContentLoaded", function() {
  
  const flipCards = document.querySelectorAll('.flip-card');
  const isTouchDevice = 'ontouchstart' in window || navigator.maxTouchPoints > 0;

if (!isTouchDevice) {
  flipCards.forEach(card => {
    
    card.addEventListener('mouseenter', function() {
      
      card.classList.replace('flip-card', 'flipped-card'); //set class
      
      const backHeight = this.querySelector('.flip-card-back').offsetHeight;
      this.style.marginBottom = (backHeight - 300) + 'px';
      
    });

    card.addEventListener('mouseleave', function() {
      
      card.classList.replace('flipped-card', 'flip-card'); //set class
      
      this.style.marginBottom = '0';

    });

  });
}

if (isTouchDevice) {

  // If card is clicked, add appropriate margin, else no margin
    // This solution does not work perfectly - I plan to rewrite it where the action changes        the class and  
  document.addEventListener('pointerdown', function (e) {
    flipCards.forEach(card => {
      
      if (card.contains(e.target)) {
        
        card.classList.replace('flip-card', 'flipped-card');
        
        const backHeight = card.querySelector('.flip-card-back').offsetHeight;
        card.style.marginBottom = (backHeight - 300) + 'px';
    
      } else {
        
        card.style.marginBottom = '0';
        
        card.classList.replace('flipped-card', 'flip-card'); //set class
      
        
      }
    });
  });
  
}


});
</script>
```
